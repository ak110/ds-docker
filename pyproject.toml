[project]
name = "ds-docker"
version = "0.0.1"
requires-python = ">=3.11,<3.13"
dependencies = [
    "accelerate",
    "albumentations",
    "anthropic>=0.21",
    "augmentor",
    "authlib>=1.2",
    "av",
    "awscli>=1.38.10",
    "azure-identity>=1.15",
    "bandit",
    "bashplotlib",
    "bcrypt>=4.1",
    "better_exceptions",
    "bitsandbytes",
    "black>=24.3",
    "boto3>=1.34",
    "cairocffi",
    "catboost",
    "category_encoders",
    "cnn-finetune",
    "cookiecutter",
    "cupy-cuda11x",
    "cysignals",
    "datasets<3",
    "deltalake>=0.24,<0.25",
    "diskcache",
    "editdistance",
    "editdistance_s",
    "einops",
    "eli5",
    "ensemble-boxes",
    "fastai",
    "fastapi[all]",
    "fasteners",
    "fastprogress",
    "fastrlock",
    "fasttext",
    "feather-format",
    "featuretools",
    "fire",
    "flash-attn",
    "flask-login>=0.6.3",
    "flask-migrate>=4.0",
    "flask-restless-ng>=3.0",
    "flask-sqlalchemy>=3.1",
    "flask[async]>=3.0",
    "flexgen",
    "fugashi[unidic, unidic-lite]",
    "gensim",
    "ginza",
    "google-cloud-aiplatform>=1.44",
    "google-generativeai",
    "guidance",
    "gunicorn>=21.2",
    "httpx>=0.25",
    "hyperopt",
    "iam-rolesanywhere-session",
    "image-classifiers",
    "imageio",
    "imbalanced-learn",
    "imgaug",
    "imgdup",
    "ipadic",
    "isort",
    "iterative-stratification",
    "janome",
    "japanize-matplotlib",
    "jmespath",
    "joblib",
    "jpholiday",
    "jumandic",
    "jupyterlab",
    "jupyterlab-code-formatter",
    "jupyterlab-git",
    "jupyterlab-language-pack-ja-jp",
    "jupyterlab-widgets",
    "kaggle",
    "keras",
    "keras-cv",
    "keras2onnx",
    "langchain",
    "langchain-community>=0.3.19",
    "langchain-openai",
    "librosa",
    "lightgbm",
    "litellm",
    "llama-index>=0.9",
    "markdown>=3.6",
    "matplotlib",
    "mecab-python3",
    "motpy",
    "moviepy>=2.0",
    "mpi4py",
    "msal>=1.25",
    "msg-parser[rtf]>=1.2",
    "msgraph-sdk>=1.0",
    "natsort",
    "ninja",
    "nlp",
    "nltk>=3.7",
    "noise",
    "nose",
    "numba",
    "numpy>=1.26",
    "onnxmltools",
    "openai>=1.3",
    "opencv-python-headless",
    "openpyxl",
    "optimum",
    "optuna>=1.3.0",
    "packaging>=23.2",
    "pandas",
    "pandas-stubs",
    "passlib",
    "pathvalidate>=3.2",
    "peft",
    "pillow>=10.2",
    "pip-tools",
    "pip_system_certs",
    "pipdeptree",
    "pipenv",
    "plotly",
    "polars[all]>=1.12",
    "pre-commit",
    "pretrainedmodels",
    "progressbar2",
    "ptk",
    "pycocotools",
    "pycryptodome",
    "pydot",
    "pyfltr>=1.6",
    "pygments",
    "pykalman",
    "pylama",
    "pymysql>=1.1",
    "pyod",
    "pypandoc",
    "pypdf",
    "pytesseract",
    "pytest-cookies",
    "pytest-mock",
    "pytest-timeout",
    "pytest-xdist",
    "python-datauri",
    "python-dotenv>=1.0",
    "python-utils",
    "pytilpack[all]>=1.11",
    "pytorch-ignite",
    "pytorch-lightning",
    "pyyaml>=6.0",
    "refurb",
    "requests>=2.28",
    "rgf-python",
    "rope",
    "safety",
    "schedule>=1.2",
    "scikit-image",
    "scikit-learn",
    "scikit-optimize[plots]",
    "seaborn",
    "segmentation-models",
    "semantic-kernel",
    "sentence-transformers>=3.2.1",
    "sentencepiece",
    "setup-cfg-fmt",
    "setuptools",
    "signate",
    "sklearn-pandas>=2.2.0",
    "solrpy",
    "soundfile",
    "spacy",
    "sphinx",
    "sphinx-autobuild",
    "sphinx-autodoc-typehints",
    "sphinx_rtd_theme",
    "sqlalchemy-stubs",
    "sqlalchemy[mypy]>=2.0",
    "sse-starlette",
    "stickytape",
    "sudachidict_core",
    "sudachipy",
    "sympy",
    "tabulate",
    "tenacity",
    "tensorboard",
    "tensorboard-plugin-profile",
    "tensorflow-datasets",
    "tensorflow-hub",
    "tensorflow>=2.19,<2.20",  # torchとコンフリクトするので[and-cuda]はあとで実施
    "tensorpack",
    "textdistance[extras]",
    "tf-keras",
    "tf2cv",
    "tf2onnx",
    "tidecv",
    "tiktoken>=0.5",
    "tinydb",
    "tokenizers>=0.13.2",
    "torch>=2.6,<2.7", # flash-attn用にバージョン固定
    "torchaudio>=2.5.1",
    "torchtext>=0.18.0",
    "torchvision>=0.20.1",
    "tqdm",
    "transformers-stream-generator",
    "transformers[ja, sentencepiece]>=4.46.2",
    "translatedoc>=1.5.1",
    "triton",
    "trl>=0.11.4",
    "tslearn",
    "types-click",
    "types-flask",
    "types-markdown",
    "types-pillow",
    "types-pyyaml",
    "types-requests",
    "types-werkzeug",
    "ulid-py>=1.1",
    "umap-learn",
    "unstructured[all-docs]>=0.16.8",
    # "vllm>=0.7",  # depends on torch==2.5.1
    "wheel>=0.37",
    "xgboost>=1.7.6",
    "xlrd",
    "xlsx2csv>=0.8",
    "xlsxwriter>=3.1",
    "xlwt",
    "yapf",
]

[dependency-groups]
step2 = [
    "auto-gptq>=0.7",
    "autoawq>=0.2.7",
    # "autoawq_kernels",
]
dev = []

[tool.uv]
package = false
no-build-isolation-package = [
    "auto-gptq",
    "autoawq",
]
# https://pytorch.org/get-started/locally/
extra-index-url = [
    "https://download.pytorch.org/whl/cu126",
    # "https://huggingface.github.io/autogptq-index/whl/cu118",
]
index-strategy = "unsafe-best-match"  # torch系が怪しいのでこれつけないと通らない

[tool.uv.sources]
torch = { index = "pytorch" }
# autoawq_kernels = { url = "https://github.com/casper-hansen/autoawq_kernels/releases/download/v0.0.9/autoawq_kernels-0.0.9-cp311-cp311-linux_x86_64.whl" }
flash-attn = [
    # https://github.com/Dao-AILab/flash-attention/releases
    { url = "https://github.com/Dao-AILab/flash-attention/releases/download/v2.7.4.post1/flash_attn-2.7.4.post1+cu12torch2.6cxx11abiTRUE-cp311-cp311-linux_x86_64.whl", marker = "python_version == '3.11'" },
    { url = "https://github.com/Dao-AILab/flash-attention/releases/download/v2.7.4.post1/flash_attn-2.7.4.post1+cu12torch2.6cxx11abiTRUE-cp312-cp312-linux_x86_64.whl", marker = "python_version == '3.12'" }
]

[[tool.uv.index]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cu126"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pyfltr]
pyupgrade-args = ["--py311-plus"]
pylint-args = ["--jobs=4"]

[tool.isort]
# https://black.readthedocs.io/en/stable/guides/using_black_with_other_tools.html#isort
# https://pycqa.github.io/isort/docs/configuration/options.html
profile = "black"

[tool.black]
# https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html
target-version = ['py311']
skip-magic-trailing-comma = true

[tool.flake8]
# https://black.readthedocs.io/en/stable/guides/using_black_with_other_tools.html#flake8
# https://flake8.pycqa.org/en/latest/user/configuration.html
max-line-length = 128
extend-ignore = "E203,"

[tool.mypy]
# https://mypy.readthedocs.io/en/stable/config_file.html
allow_redefinition = true
check_untyped_defs = true
ignore_missing_imports = true
strict_optional = true
strict_equality = true
warn_no_return = true
warn_redundant_casts = true
warn_unused_configs = true
show_error_codes = true
cache_dir = "/dev/null"

[[tool.mypy.overrides]]
follow_imports = "skip"
module = ["transformers.*"]

[tool.pytest.ini_options]
# https://docs.pytest.org/en/latest/reference/reference.html#ini-options-ref
addopts = "--showlocals -p no:cacheprovider --durations=5"
norecursedirs = ["__pycache__", ".git", ".cache", ".venv", "node_modules"]
filterwarnings = [
    "ignore:.*`config`.*:pydantic.warnings.PydanticDeprecatedSince20",  # for pydantic
    "ignore:.*`@root_validator`.*:pydantic.warnings.PydanticDeprecatedSince20",  # for litellm
    "ignore:.*`pydantic.config.Extra`.*:pydantic.warnings.PydanticDeprecatedSince20",  # for litellm
    "ignore:.*pkg_resources is deprecated as an API.*:DeprecationWarning",  # for litellm
    "ignore:.*pkg_resources.declare_namespace.*:DeprecationWarning",  # for google
]
xfail_strict = true
log_level = "DEBUG"
